{"version":3,"sources":["App.module.css","components/Filter/Filter.module.css","components/ContactForm/Contact.form.module.css","components/Contacts/Contacts.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameId","shortid","generate","numberId","handleChange","e","target","value","setState","handleSubmit","submit","props","alert","preventDefault","reset","className","s","form","onSubmit","this","labelName","htmlFor","input","type","pattern","title","required","onChange","id","labelNumber","btnSubmit","Component","Filter","filter","onChangeFilter","filterLabel","filterInput","Contacts","contacts","deleteContact","contactsList","map","contactsItem","contactsParagraph","contactsNumber","onClick","contactsBtn","App","contactsData","addContact","some","contact","changeFilter","getFiltredElem","filterToLowerCase","toLowerCase","includes","contactId","prevState","contactsTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1e9024a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2LysQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__nmxXt\",\"filterInput\":\"Filter_filterInput__1a1cP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Contact_form_input__O1buV\",\"labelName\":\"Contact_form_labelName__4G4Bx\",\"labelNumber\":\"Contact_form_labelNumber__iA6KQ\",\"btnSubmit\":\"Contact_form_btnSubmit__2AwjA\",\"form\":\"Contact_form_form__3EHzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsTitle\":\"Contacts_contactsTitle__3jvKq\",\"contactsList\":\"Contacts_contactsList__NbQN2\",\"contactsItem\":\"Contacts_contactsItem__2pP7d\",\"contactsParagraph\":\"Contacts_contactsParagraph__ZVbD_\",\"contactsNumber\":\"Contacts_contactsNumber__2ScFW\",\"contactsBtn\":\"Contacts_contactsBtn__1Ryuq\"};","import { Component } from \"react/cjs/react.production.min\";\r\nimport s from \"./Contact.form.module.css\";\r\nimport shortid from \"shortid\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameId = shortid.generate();\r\n  numberId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const { submit } = this.props;\r\n    alert(\"Contact has been saved:\" + this.state.name);\r\n    e.preventDefault();\r\n\r\n    submit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.labelName} htmlFor={this.nameId}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          id={this.nameId}\r\n        />\r\n\r\n        <label className={s.labelNumber} htmlFor={this.numberId}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n          id={this.numberId}\r\n        />\r\n\r\n        <button type=\"submit\" className={s.btnSubmit}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import { Fragment } from \"react/cjs/react.production.min\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => (\r\n  <Fragment>\r\n    <label className={s.filterLabel}>Find contacts by name</label>\r\n    <input className={s.filterInput} value={filter} onChange={onChangeFilter} />\r\n  </Fragment>\r\n);\r\n\r\nexport default Filter;\r\n","import s from \"./Contacts.module.css\";\r\n\r\nconst Contacts = ({ contacts, deleteContact }) => (\r\n  <div>\r\n    <ul className={s.contactsList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.contactsItem}>\r\n          <p className={s.contactsParagraph}>{name}:</p>\r\n          <p className={s.contactsNumber}>{number}</p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              deleteContact(id);\r\n            }}\r\n            className={s.contactsBtn}\r\n          >\r\n            Delete contact\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default Contacts;\r\n","import { Component } from \"react/cjs/react.production.min\";\nimport s from \"./App.module.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport contactsData from \"./json/contactsData.json\";\nimport shortid from \"shortid\";\nimport Filter from \"./components/Filter/Filter\";\nimport Contacts from \"./components/Contacts/Contacts\";\n\nclass App extends Component {\n  state = {\n    contacts: contactsData,\n    filter: \"\",\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    contacts.some((contact) => name === contact.name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [...contacts, { name, number, id: shortid() }],\n        }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFiltredElem = () => {\n    const filterToLowerCase = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filterToLowerCase)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    return (\n      <div className={s.App}>\n        <h1>Phoonebook</h1>\n        <ContactForm submit={this.addContact} />\n        <h2 className={s.contactsTitle}>Contacts 📞</h2>\n        <Filter filter={this.state.filter} onChangeFilter={this.changeFilter} />\n        <Contacts\n          contacts={this.getFiltredElem()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}